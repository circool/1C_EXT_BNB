// *****************************************************************
// Модуль формы обработки ЗагрузкаКурсовВалют
// *****************************************************************

#Область ОбработчикиСобытийФормы

&НаСервере
&После("ЗаполнитьВалюты")
// Дополняет табличную часть формы строками с валютами котируемыми к леву (курс которых загружается с сайта БНБ)
//
Процедура БНБ_ЗаполнитьВалюты()	
	СписокВалют = Объект.СписокВалют;	
	ЗагружаемыеВалюты = РаботаСКурсамиВалют.БНБ_ЗагружаемыеВалюты().Результат;
	Для Каждого ЭлементВалюта Из ЗагружаемыеВалюты Цикл
		ДобавитьВалютуВСписок(ЭлементВалюта);
	КонецЦикла;
КонецПроцедуры 


// Удаляет из табличной формы привнесенные в нее из БНБ_ЗаполнитьВалюты() валюты
// работает неправильно !!! 
&НаСервере
Процедура БНБ_ВосстановитьФорму()
	СписокВалют = Объект.СписокВалют; 
	
	// Запомнить состояние выбора
	ОтмеченныеВалюты = Новый Массив();
	Для Каждого ВалютаСписка из СписокВалют Цикл
	   Если ВалютаСписка.Загружать Тогда
	       ОтмеченныеВалюты.Добавить(ВалютаСписка.Валюта);	   
	   КонецЕсли;
	КонецЦикла;
	
	// Заполнить список валютами, загружаемыми из интернета
	СписокВалют.Очистить();
	ЗагружаемыеВалюты = РаботаСКурсамиВалют.ЗагружаемыеВалюты();	
	Для Каждого ЭлементВалюта Из ЗагружаемыеВалюты Цикл
		НоваяСтрока = Объект.СписокВалют.Добавить();	
		ЗаполнитьДанныеСтрокиТаблицыНаОсновеВалюты(НоваяСтрока, ЭлементВалюта);
		// Восстановить состояние загрузки
		Если ОтмеченныеВалюты.Найти(ЭлементВалюта) <> Неопределено Тогда
			НоваяСтрока.Загружать = Истина		
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти 


#Область ОбработчикКомандФормы

&НаКлиенте
&Перед("НачатьЗагрузкуКурсовВалют")
// Вызывается при нажатии кнопки "Загрузить и закрыть" из формы
// Получает управление перед началом загрузки стандартной обработки события
// Вызывает серверную процедуру получения курсов для котируемых к леву валют
// после чего восстанавливает изначальное состояния формы и управление передается 
// стандартной процедуре из Обработки.ЗагрузкаКурсовВалют.Формы.Форма.НачатьЗагрузкуКурсовВалют()
//
Процедура БНБ_НачатьЗагрузкуКурсовВалют()
	
	ПараметрыВызова = Новый Структура("Валюты,ДатаНачалаПериода,ДатаОкончанияПериода"
		, Объект.СписокВалют
		, Объект.НачалоПериодаЗагрузки
		, Объект.ОкончаниеПериодаЗагрузки
	);
		
	БНБ_ПолучитьКурсы(ПараметрыВызова);
	БНБ_ВосстановитьФорму();  	

КонецПроцедуры  

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

// Выполняет загрузку и запись в регистр КурсыВалют курсов для котируемых к леву валют, отбирая их из полученного
// массива и вызывая метод РаботаСКурсамиВалют.ПолучитьКурсыВалют(Валюта,ДатаНачалаПериода,ДатаОкончанияПериода)
// для каждой валюты. Результыты публикуются журнале операций. 
//
// Параметры:
//   ПараметрыЗапроса - Структура:
//     * Валюты - Массив изСправочникСсылка.Валюты  
//     * ДатаНачалаПериода - Дата - Начальная дата интервала
//	   * ДатаОкончанияПериода - Дата - Конечная дата интервала
//
&НаСервере                                
Процедура БНБ_ПолучитьКурсы(ПараметрыЗапроса)  
	
	СписокВалют =  ПараметрыЗапроса.Валюты;
	ДатаНачала = ПараметрыЗапроса.ДатаНачалаПериода;
	ДатаОкончания = ПараметрыЗапроса.ДатаОкончанияПериода;	
	
	Заголовок = НСтр("ru = 'Валюты.Получение курсов'");
	
	// Проверка входящих данных
	// Если данных недостаточно, вернуть ошибку и ее описание
	Если (СписокВалют.Количество() = 0) ИЛИ (ДатаНачала = Неопределено) ИЛИ (ДатаОкончания = Неопределено) ИЛИ (ДатаНачала > ДатаОкончания) Тогда	
		Описание = НСтр("ru = 'Недостаточно данных или данные неверныне");
		ЗаписьЖурналаРегистрации(Заголовок,УровеньЖурналаРегистрации.ОшибкаОписание, , ,Описание);
		Возврат;
	КонецЕсли;
	
	
	// Блок получения котировок
	Котировки = Новый Массив();
	Статус = Истина;
	
	Для Каждого Валюта из СписокВалют Цикл				
		Если Валюта.Валюта.БНБ_КотироватьКБолгарскомуЛеву И Валюта.Загружать Тогда
			
			// Обновление курсов для подходящих валют
			РезультатЗагрузки = РаботаСКурсамиВалют.БНБ_ПолучитьКурсВалюты(Валюта.Валюта, ДатаНачала, ДатаОкончания);								
			// получение этой валюты не удалось
			Если НЕ РезультатЗагрузки.Статус Тогда	
				// Сделать запись в журнале и перейти к следующей валюте
				Описание = НСтр("ru = 'Нет курсов для валюты %1 (%2).'");
				Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Валюта.Валюта.Наименование, Валюта.Валюта.Код);
				ЗаписьЖурналаРегистрации(Заголовок,УровеньЖурналаРегистрации.Предупреждение,,,Описание);
				Продолжить;	
			КонецЕсли;
			
			// Обработать полученный результат - записать его в массив Котировки
			Для каждого Котировка Из РезультатЗагрузки.Результат Цикл				
				Котировки.Добавить(Котировка);					
			КонецЦикла;
			
			// Сформировать сообщение о успехе выполнения
			Описание = НСтр("ru = 'Загружено %1 записей для валюты %2 (%3).'");
			Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, РезультатЗагрузки.Результат.Количество(), Валюта.Валюта.Наименование, Валюта.Валюта.Код);
			ЗаписьЖурналаРегистрации(Заголовок,УровеньЖурналаРегистрации.Информация,,,Описание);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Котировки.Количество() > 0 Тогда			
		// Записать данные
		РаботаСКурсамиВалют.БНБ_ВыполнитьЗаписьКурсовВРеестр(Котировки);
		// Занести запись в журнал событий
		Описание = НСтр("ru = 'В %1 добавлено %2 записей'");   
		Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, РегистрыСведений.КурсыВалют, Котировки.Количество() );
		ЗаписьЖурналаРегистрации(Заголовок, УровеньЖурналаРегистрации.Информация, , ,Описание);	
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
