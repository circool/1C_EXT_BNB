// Возвращает валюты, которые должны загружаться с сайта БНБ
//
// Параметры:
//
// Возвращаемое значение:
//   Массив, СправочникСсылка.Валюты - ссылки созданных валют.
//
Функция БНБ_ЗагружаемыеВалюты() Экспорт
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления
	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

//Возвращает список символьных кодов валют, котировки которых доступны на сайте БНБ
//
&НаСервере
Функция БНБ_ДоступныеВалюты() Экспорт
		
	БНБ_ДоступныеВалюты = новый Массив();
	Ответ = БНБ_ПолучитьСтраницуHTML("www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?search=true");
	Если Ответ.Статус Тогда	
		ЧтениеHTML = Новый ЧтениеHTML;
		ЧтениеHTML.УстановитьСтроку(Ответ.Результат);
		ПостроительДОМ = Новый ПостроительDOM;
		ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
		ЭлементыСекции = ДокументDOM.ПолучитьЭлементПоИдентификатору("currency").ДочерниеУзлы[4].ДочерниеУзлы;	
		
		Для каждого Валюта Из ЭлементыСекции Цикл		
			БНБ_ДоступныеВалюты.Добавить(Валюта.ТекстовоеСодержимое)		
		КонецЦикла;	
		
	КонецЕсли;
	
	Возврат БНБ_ДоступныеВалюты;	

КонецФункции  

//Возвращает структуру "Статус,Результат" где
// Статус - результат получения страницы
// Результат - текстовое содержимое полученной HTML-страницы
//
&НаСервере
Функция БНБ_ПолучитьСтраницуHTML(АдресСтраницы) Экспорт 
	Результат = Новый Структура("Статус,Результат");	
	
	Если СтрДлина(АдресСтраницы) = 0 Тогда
		Результат.Вставить("Статус",Ложь);
		Результат.Вставить("Результат","Не указан адрес страницы");
		Возврат Результат;
	КонецЕсли;
	
	Попытка	
		БезопасноеСоединение = Новый HTTPСоединение(Лев(АдресСтраницы, СтрНайти(АдресСтраницы, "/")-1),443,,,,,Новый ЗащищенноеСоединениеOpenSSL());	
		ТекстЗапроса = Прав(АдресСтраницы, 1 + (СтрДлина(АдресСтраницы) - СтрНайти(АдресСтраницы, "/")));	
		HTMLОтвет = БезопасноеСоединение.Получить(Новый HTTPЗапрос(ТекстЗапроса));	
	Исключение
		Результат.Вставить("Статус", ложь);
		Возврат Результат;
	КонецПопытки;
	
	
	Если HTMLОтвет.КодСостояния = 200 Тогда
		//В случае успеха вернуть содержимое страницы
		Результат.Вставить("Статус",Истина);		
		Результат.Вставить("Результат", HTMLОтвет.ПолучитьТелоКакСтроку());	
		
	Иначе
		//В случае ошибки вернуть код ошибки
		Результат.Вставить("Статус",Ложь);
		Результат.Вставить("Результат",  HTMLОтвет.КодСостояния);
		
	КонецЕсли;
	
	Возврат Результат;
	

КонецФункции 
             

&НаСервере
// Основная процедура получения курсов для указанной валюты
// В качестве параметров принимает:
// 	Валюта: 		Ссылка на экземпляр справочника Валюты
// 	НачалоПериода: 	Дата, указанная в форме как НачалоПериодаЗагрузки
// 	КонецПериода:	Дата, указанная в форме как ОкончаниеПериодаЗагрузки
//
Процедура БНБ_СкачатьКурсы(Валюта, НачалоПериода, КонецПериода) Экспорт 
	
	// TODO: Сформировать ошибку в случае отсутствия результата
	
    // Создать хранилище для результатов
	КурсыВалют = Новый Массив();
	
	//Получить массив из интервалов
	Интервалы = Новый Массив();
	Если НачалоПериода = КонецПериода Тогда
		
		Интервал = Новый Структура("ДатаНачала,ДатаОкончания");
		Интервал.Вставить("ДатаНачала",НачалоПериода);
		Интервал.Вставить("ДатаОкончания",КонецПериода);
		Интервалы.Добавить(Интервал);
		
	Иначе
		
		//Если интервал дат больше 3 месяцев - разбить на части
		МаксИнтервал = 7862400;
		Начало = НачалоПериода;
		Конец = Начало;
		
		Пока КонецПериода > Конец Цикл
			Конец = Начало;
			Конец = ?((Конец+МаксИнтервал < КонецПериода), Конец+МаксИнтервал, КонецПериода);
			Интервал = Новый Структура("ДатаНачала,ДатаОкончания");
			Интервал.Вставить("ДатаНачала",Начало);
			Интервал.Вставить("ДатаОкончания",Конец);
			Интервалы.Добавить(Интервал);
			Начало = Конец + 86400;
		КонецЦикла;
		
	КонецЕсли;
	
	//Теперь для каждого интервала загрузить котировки
	Для каждого Интервал Из Интервалы Цикл	
		
		// Сформировать адрес
		ПараметрЗапроса = "www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?downloadOper=&" 
		+"group1=second" 
		+"&periodStartDays="  	+	Формат(День(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartMonths=" 	+ 	Формат(Месяц(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartYear="	+	Формат(Интервал.ДатаНачала,"ДФ=yyyy")
		+"&periodEndDays=" 		+	Формат(День(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndMonths=" 	+ 	Формат(Месяц(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndYear=" 		+ 	Формат(Интервал.ДатаОкончания,"ДФ=yyyy")
		+"&valutes="			+	?(Валюта="руб.","RUB",Валюта)	
		+"&search=true&showChart=false&showChartButton=false";
	
		//Получить страницу
		Ответ = БНБ_ПолучитьСтраницуHTML(ПараметрЗапроса);
		
		Если Ответ.Статус Тогда
			ЧтениеHTML = Новый ЧтениеHTML;
			ЧтениеHTML.УстановитьСтроку(Ответ.Результат);
			ПостроительДОМ = Новый ПостроительDOM;
			ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
			ЭлементыСекции = ДокументDOM.ПолучитьЭлементыПоИмени("tbody");	
			
			//Если ответ не пустой
			Если ЭлементыСекции.Количество() > 0 Тогда	
				// Массив ЭлементыСекции должен содержать единственную запись
				// Разобрать тело таблицы на строки
				Для каждого СтрокаТаблицы Из ЭлементыСекции[0].ДочерниеУзлы Цикл
					//Сформировать структуру для ответа 
					Котировка = Новый Структура("Дата, Валюта, Курс, Кратность");
					//Для каждой строки заполнить структуру Котировка
					СтрокаСДатой = СтрокаТаблицы.ДочерниеУзлы[0].ТекстовоеСодержимое;
					
					Котировка.Вставить("Дата", Дата(Прав(СтрокаСДатой, 4), Сред(СтрокаСДатой, 4, 2), Сред(СтрокаСДатой, 1, 2)));
					Котировка.Вставить("Валюта", Валюта);
					Котировка.Вставить("Курс", СтрокаТаблицы.ДочерниеУзлы[4].ТекстовоеСодержимое);
					Котировка.Вставить("Кратность", СтрокаТаблицы.ДочерниеУзлы[2].ТекстовоеСодержимое);
					
					// Поместить результат в хранилище для результатов
					КурсыВалют.Добавить(Котировка);
					
				КонецЦикла;
			Иначе
				//Данных не найдено. Это не страшно, например по выходным данных не бывает
			КонецЕсли;
			
		КонецЕсли;
		
	// Обработать следующий интервал	
	КонецЦикла;	
	
	// Записать полученные курсы в реестр
	// Обработать каждую запись из полученных данных
	Для каждого Запись Из КурсыВалют Цикл
		
		//Получть записи регистра на указанную валюту и дату
		НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
		ТекВалюта = Справочники.Валюты.НайтиПоНаименованию(Запись.Валюта);
		ТекДата = Запись.Дата;
		НаборЗаписей.Отбор.Валюта.Установить(ТекВалюта);
		НаборЗаписей.Отбор.Период.Установить(НачалоДня(ТекДата));
		НаборЗаписей.Прочитать();
		
		//Если в регистре нет записей, добавить новую, если есть - перезаписать новыми данными
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Валюта   = ТекВалюта;
			НоваяЗапись.Период = ТекДата;
			НоваяЗапись.Курс = Запись.Курс;
			НоваяЗапись.Кратность = Запись.Кратность;
		Иначе
			НоваяЗапись = НаборЗаписей[0];
		КонецЕсли;
		
		// Закончить операцию добавления/обновления записси в регистре
		НоваяЗапись.Курс = Запись.Курс;
		НаборЗаписей.Записать();	
	КонецЦикла;
	
	
КонецПроцедуры
