// *****************************************************************
// Общий модуль РаботаСКурсамиВалют
// Включает серверные функции и процедуры, предназначенные для 
// получения и сохранения курсов валют для котируемых к леву валют.
// *****************************************************************

#Область Служебные

// Возвращает ссылки на валюты, которые котируются к леву
//
// Параметры:  нет
//
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	ссылки на эл-ты справочника Валюты
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
//
&НаСервере
Функция БНБ_ЗагружаемыеВалюты() Экспорт
	Результат = Новый Структура("Статус,Результат,Описание");	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления
	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокВалют = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если СписокВалют.Количество() > 0 Тогда
		Описание = "Найдено " + СписокВалют.Количество() + " валют ";
		Результат.Вставить("Статус", Истина);
	Иначе
		Описание = "Нет подходящих валют.";
		Результат.Вставить("Статус", Ложь);	
	КонецЕсли;	
	
	Результат.Вставить("Описание", Описание);
	Результат.Вставить("Результат", СписокВалют);
	
	Возврат Результат;
	
КонецФункции

// Возвращает символьные коды валют, котировки которых доступны на сайте БНБ
// 
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	символьные коды доступных на сайте валют
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
//
//&НаСервере
//Функция БНБ_ДоступныеВалюты() Экспорт
//	Результат = Новый Структура("Статус,Результат,Описание");	
//	ДоступныеВалюты = новый Массив();
//	
//	Ответ = БНБ_ПолучитьСтраницуHTML("www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?search=true");
//	Если Ответ.Статус Тогда	
//		ЧтениеHTML = Новый ЧтениеHTML;
//		ЧтениеHTML.УстановитьСтроку(Ответ.Результат);
//		ПостроительДОМ = Новый ПостроительDOM;
//		ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
//		ЭлементыСекции = ДокументDOM.ПолучитьЭлементПоИдентификатору("currency").ДочерниеУзлы[4].ДочерниеУзлы;	
//		
//		Для каждого Валюта Из ЭлементыСекции Цикл		
//			ДоступныеВалюты.Добавить(Валюта.ТекстовоеСодержимое)		
//		КонецЦикла;
//	Иначе
//		Возврат Ответ;
//	КонецЕсли;
//	
//	Если ДоступныеВалюты.Количество() > 0 Тогда
//		Описание = "Найдено " +  ДоступныеВалюты.Количество() + " валют ";
//		Результат.Вставить("Статус", Истина);
//	Иначе
//		Описание = "Страница не найдена. Проверьте страницу вручную адрес www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?search=true";
//		Результат.Вставить("Статус", Ложь);	
//	КонецЕсли;	
//	Результат.Вставить("Описание", Описание);
//	Результат.Вставить("Результат", ДоступныеВалюты);
//	Возврат Результат;	
//	
//КонецФункции  

// Возвращает ссылки на валюты, которые отмечены как автоматически обновляемые
//
// Параметры:  нет
//
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	ссылки на эл-ты справочника Валюты
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
// 
//Функция БНБ_АвтоматическиОбновляемыеВалюты()
//	Результат = Новый Структура("Статус,Результат,Описание");	
//	
//	ТекстЗапроса =
//	"ВЫБРАТЬ
//	|	Валюты.Ссылка КАК Ссылка
//	|ИЗ
//	|	Справочник.Валюты КАК Валюты
//	|ГДЕ
//	|	НЕ Валюты.ПометкаУдаления
//	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА
//	|	И  Валюты.БНБ_ОбновлятьАвтоматически = ИСТИНА";
//	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	СписокВалют = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
//	
//	Если СписокВалют.Количество() > 0 Тогда
//		Описание = "Найдено " + СписокВалют.Количество() + " валют ";
//		Результат.Вставить("Статус", Истина);
//	Иначе
//		Описание = "Нет подходящих валют.";
//		Результат.Вставить("Статус", Ложь);	
//	КонецЕсли;	
//	
//	Результат.Вставить("Описание", Описание);
//	Результат.Вставить("Результат", СписокВалют);
//	
//	Возврат Результат;
//КонецФункции

// Возвращает содержимое WEB-страницы
// Параметры:
//		АдресСтраницы:
// Возвращает:
//	Структура "СтатусОперации,Результат":
// 		Статус 		-	булево	-	статус выполнения
// 		Результат - текстовое содержимое полученной HTML-страницы
//		Описание	-	строка	-	текстовое описание возвращаемого результата
//
&НаСервере
Функция БНБ_ПолучитьСтраницуHTML(АдресСтраницы) Экспорт 
	Результат = Новый Структура("Статус,Результат,Описание");	
	
	Если СтрДлина(АдресСтраницы) = 0 Тогда
		Возврат Новый Структура("Статус,Описание,Результат", Ложь, "Не указан адрес страницы", Неопределено );
	КонецЕсли;
	
	Попытка	
		БезопасноеСоединение = Новый HTTPСоединение(Лев(АдресСтраницы, СтрНайти(АдресСтраницы, "/")-1),443,,,,,Новый ЗащищенноеСоединениеOpenSSL());	
		ТекстЗапроса = Прав(АдресСтраницы, 1 + (СтрДлина(АдресСтраницы) - СтрНайти(АдресСтраницы, "/")));	
		HTMLОтвет = БезопасноеСоединение.Получить(Новый HTTPЗапрос(ТекстЗапроса));	
	Исключение
		Ошибка = ОписаниеОшибки(); 
		ЗаписьЖурналаРегистрации("НедопустимаяОперация", УровеньЖурналаРегистрации.Ошибка,,,Ошибка);
		Возврат Новый Структура("Статус,Описание,Результат", Ложь, Ошибка, Неопределено );
	КонецПопытки;
	
	Статус = (HTMLОтвет.КодСостояния = 200);
	Описание = HTMLОтвет.КодСостояния;
	Результат = HTMLОтвет.ПолучитьТелоКакСтроку(); 
	Возврат Новый Структура("Статус,Описание,Результат", Статус, Описание, Результат);
	
КонецФункции 

// Блок для чтения курса валюты в заданном интервале
//
//
//
&НаСервере
Функция БНБ_ПолучитьКурсВалюты(Валюта, ДатаНачала, ДатаОкончания) Экспорт  

	Котировки = Новый Массив();
	//Статус = Истина;
	Интервалы = Новый Массив();
	
	Если ДатаНачала = ДатаОкончания Тогда
		
		Интервал = Новый Структура("ДатаНачала,ДатаОкончания", ДатаНачала, ДатаНачала);
		Интервалы.Добавить(Интервал);
		
	Иначе
		
		//Если интервал дат больше 3 месяцев - разбить на части
		МаксИнтервал = 7862400;
		Начало = ДатаНачала;
		Конец = Начало;
		
		Пока ДатаОкончания > Конец Цикл
			Конец = Начало;
			Конец = ?((Конец+МаксИнтервал < ДатаОкончания), Конец+МаксИнтервал, ДатаОкончания);
			Интервал = Новый Структура("ДатаНачала,ДатаОкончания");
			Интервал.Вставить("ДатаНачала",Начало);
			Интервал.Вставить("ДатаОкончания",Конец);
			Интервалы.Добавить(Интервал);
			Начало = Конец + 86400;
		КонецЦикла;
		
	КонецЕсли;
	
	//Для каждого интервала загрузить котировки
	Для каждого Интервал Из Интервалы Цикл		
		// Сформировать адрес и скачать страницу с данными
		ПараметрЗапроса = "www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?downloadOper=&" 
		+"group1=second" 
		+"&periodStartDays="  	+	Формат(День(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartMonths=" 	+ 	Формат(Месяц(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartYear="	+	Формат(Интервал.ДатаНачала,"ДФ=yyyy")
		+"&periodEndDays=" 		+	Формат(День(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndMonths=" 	+ 	Формат(Месяц(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndYear=" 		+ 	Формат(Интервал.ДатаОкончания,"ДФ=yyyy")
		+"&valutes="			+	?(Валюта="руб.","RUB", Валюта)	
		+"&search=true&showChart=false&showChartButton=false";		
		РезультатЗапроса = БНБ_ПолучитьСтраницуHTML(ПараметрЗапроса);
		
		Если РезультатЗапроса.Статус Тогда
			ЧтениеHTML = Новый ЧтениеHTML;
			ЧтениеHTML.УстановитьСтроку(РезультатЗапроса.Результат);
			ПостроительДОМ = Новый ПостроительDOM;
			ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
			ЭлементыСекции = ДокументDOM.ПолучитьЭлементыПоИмени("tbody");	
			
			Если ЭлементыСекции.Количество() > 0 Тогда	
				Для каждого СтрокаТаблицы Из ЭлементыСекции[0].ДочерниеУзлы Цикл					
					СтрокаСДатой = СтрокаТаблицы.ДочерниеУзлы[0].ТекстовоеСодержимое; 
					Котировка = Новый Структура("Дата, Валюта, Курс, Кратность");
					Котировка.Вставить("Дата", Дата(Прав(СтрокаСДатой, 4), Сред(СтрокаСДатой, 4, 2), Сред(СтрокаСДатой, 1, 2)) );
					Котировка.Вставить("Валюта", Валюта);
					Котировка.Вставить("Курс", СтрокаТаблицы.ДочерниеУзлы[4].ТекстовоеСодержимое);
					Котировка.Вставить("Кратность", СтрокаТаблицы.ДочерниеУзлы[2].ТекстовоеСодержимое);					
					Котировки.Добавить(Котировка);	
				КонецЦикла; 
			Иначе
				Описание = "Не найдено данных по адресу " + ПараметрЗапроса ;
				Возврат Новый Структура("Статус,Описание,Результат", Ложь, Описание, Неопределено);
			КонецЕсли;
			
		Иначе		
			// При получении страницы возникла ошибка
			Описание = "Ошибка получения страницы (" + ПараметрЗапроса + "): " + РезультатЗапроса.Описание;
			Возврат Новый Структура("Статус,Описание,Результат", Ложь, Описание, Неопределено);
		КонецЕсли;	
	КонецЦикла;
	
	Если Котировки.Количество() = 0 Тогда	
		Описание = НСтр("ru = 'Курсы валюты %1 (%2) не загружены.
		|Нет сведений о курсе за указанный период.'");
	Иначе
		Описание = НСтр("ru = 'Загружено " + Котировки.Количество() + " курсов для валюты %1 (%2).'");
	КонецЕсли;
	
	Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Валюта.Наименование, Валюта.Код); 
	Возврат Новый Структура("Статус,Описание,Результат", Истина, Описание, Котировки);
КонецФункции

//Записывает котировки в реестр сведений КурсыВалют
// Параметр МассивКурсов состоит из строк с структурами "Дата, Валюта, Курс, Кратность"
// 
&НаСервере
Процедура БНБ_ВыполнитьЗаписьКурсовВРеестр(МассивКурсов) Экспорт
	
	// Обработать каждую запись из полученных данных
	Для каждого Запись Из МассивКурсов Цикл
		
		//Получть записи регистра на указанную валюту и дату
		НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
		ТекВалюта = Справочники.Валюты.НайтиПоНаименованию(Запись.Валюта);
		ТекДата = Запись.Дата;
		НаборЗаписей.Отбор.Валюта.Установить(ТекВалюта);
		НаборЗаписей.Отбор.Период.Установить(НачалоДня(ТекДата));
		НаборЗаписей.Прочитать();
		
		//Если в регистре нет записей, добавить новую, если есть - перезаписать новыми данными
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Валюта   = ТекВалюта;
			НоваяЗапись.Период = ТекДата;
			НоваяЗапись.Курс = Запись.Курс;
			НоваяЗапись.Кратность = Запись.Кратность;
		Иначе
			НоваяЗапись = НаборЗаписей[0];
		КонецЕсли;
		
		// Закончить операцию добавления/обновления записси в регистре
		НоваяЗапись.Курс = Запись.Курс;
		НаборЗаписей.Записать();	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


