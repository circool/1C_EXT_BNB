// *****************************************************************
// Общий модуль РаботаСКурсамиВалют
// Включает серверные функции и процедуры, предназначенные для 
// получения и сохранения курсов валют для котируемых к леву валют.
// *****************************************************************

#Область Служебные

// Возвращает ссылки на валюты, которые котируются к леву
//
// Параметры:  нет
//
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	ссылки на эл-ты справочника Валюты
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
//
&НаСервере
Функция БНБ_ЗагружаемыеВалюты() Экспорт
	Результат = Новый Структура("Статус,Результат,Описание");	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления
	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокВалют = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если СписокВалют.Количество() > 0 Тогда
		Описание = "Найдено " + СписокВалют.Количество() + " валют ";
		Результат.Вставить("Статус", Истина);
	Иначе
		Описание = "Нет подходящих валют.";
		Результат.Вставить("Статус", Ложь);	
	КонецЕсли;	
	
	Результат.Вставить("Описание", Описание);
	Результат.Вставить("Результат", СписокВалют);
	
	Возврат Результат;
	
КонецФункции

// Возвращает символьные коды валют, котировки которых доступны на сайте БНБ
// 
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	символьные коды доступных на сайте валют
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
//
&НаСервере
Функция БНБ_ДоступныеВалюты() Экспорт
	Результат = Новый Структура("Статус,Результат,Описание");	
	ДоступныеВалюты = новый Массив();
	
	Ответ = БНБ_ПолучитьСтраницуHTML("www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?search=true");
	Если Ответ.Статус Тогда	
		ЧтениеHTML = Новый ЧтениеHTML;
		ЧтениеHTML.УстановитьСтроку(Ответ.Результат);
		ПостроительДОМ = Новый ПостроительDOM;
		ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
		ЭлементыСекции = ДокументDOM.ПолучитьЭлементПоИдентификатору("currency").ДочерниеУзлы[4].ДочерниеУзлы;	
		
		Для каждого Валюта Из ЭлементыСекции Цикл		
			ДоступныеВалюты.Добавить(Валюта.ТекстовоеСодержимое)		
		КонецЦикла;
	Иначе
		Возврат Ответ;
	КонецЕсли;
	
	Если ДоступныеВалюты.Количество() > 0 Тогда
		Описание = "Найдено " +  ДоступныеВалюты.Количество() + " валют ";
		Результат.Вставить("Статус", Истина);
	Иначе
		Описание = "Страница не найдена. Проверьте страницу вручную адрес www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?search=true";
		Результат.Вставить("Статус", Ложь);	
	КонецЕсли;	
	Результат.Вставить("Описание", Описание);
	Результат.Вставить("Результат", ДоступныеВалюты);
	Возврат Результат;	
	
КонецФункции  

// Возвращает ссылки на валюты, которые отмечены как автоматически обновляемые
//
// Параметры:  нет
//
// Возвращаемое значение - структура("Статус, Результат, Описание")
//		Статус 		-	булево	-	статус выполнения
//		Результат	-	массив	-	ссылки на эл-ты справочника Валюты
//		Описание	-	строка	-	текстовое описание возвращаемого результата 
// 
Функция БНБ_АвтоматическиОбновляемыеВалюты()
	Результат = Новый Структура("Статус,Результат,Описание");	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Валюты.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|ГДЕ
	|	НЕ Валюты.ПометкаУдаления
	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА
	|	И  Валюты.БНБ_ОбновлятьАвтоматически = ИСТИНА";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	СписокВалют = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Если СписокВалют.Количество() > 0 Тогда
		Описание = "Найдено " + СписокВалют.Количество() + " валют ";
		Результат.Вставить("Статус", Истина);
	Иначе
		Описание = "Нет подходящих валют.";
		Результат.Вставить("Статус", Ложь);	
	КонецЕсли;	
	
	Результат.Вставить("Описание", Описание);
	Результат.Вставить("Результат", СписокВалют);
	
	Возврат Результат;
КонецФункции

// Возвращает содержимое WEB-страницы
// Параметры:
//		АдресСтраницы:
// Возвращает:
//	Структура "СтатусОперации,Результат":
// 		Статус 		-	булево	-	статус выполнения
// 		Результат - текстовое содержимое полученной HTML-страницы
//		Описание	-	строка	-	текстовое описание возвращаемого результата
//
&НаСервере
Функция БНБ_ПолучитьСтраницуHTML(АдресСтраницы) Экспорт 
	Результат = Новый Структура("Статус,Результат,Описание");	
	
	Если СтрДлина(АдресСтраницы) = 0 Тогда
		Возврат Новый Структура("Статус,Описание,Результат", Ложь, "Не указан адрес страницы", Неопределено );
	КонецЕсли;
	
	Попытка	
		БезопасноеСоединение = Новый HTTPСоединение(Лев(АдресСтраницы, СтрНайти(АдресСтраницы, "/")-1),443,,,,,Новый ЗащищенноеСоединениеOpenSSL());	
		ТекстЗапроса = Прав(АдресСтраницы, 1 + (СтрДлина(АдресСтраницы) - СтрНайти(АдресСтраницы, "/")));	
		HTMLОтвет = БезопасноеСоединение.Получить(Новый HTTPЗапрос(ТекстЗапроса));	
	Исключение
		Ошибка = ОписаниеОшибки(); 
		ЗаписьЖурналаРегистрации("НедопустимаяОперация", УровеньЖурналаРегистрации.Ошибка,,,Ошибка);
		Возврат Новый Структура("Статус,Описание,Результат", Ложь, Ошибка, Неопределено );
	КонецПопытки;
	
	Статус = (HTMLОтвет.КодСостояния = 200);
	Описание = HTMLОтвет.КодСостояния;
	Результат = HTMLОтвет.ПолучитьТелоКакСтроку(); 
	Возврат Новый Структура("Статус,Описание,Результат", Статус, Описание, Результат);
	
КонецФункции 

// Блок для чтения курса валюты в заданном интервале
//
//
//
&НаСервере
Функция БНБ_ПолучитьКурсВалюты(Валюта, ДатаНачала, ДатаОкончания) Экспорт  

	Котировки = Новый Массив();
	//Статус = Истина;
	Интервалы = Новый Массив();
	
	Если ДатаНачала = ДатаОкончания Тогда
		
		Интервал = Новый Структура("ДатаНачала,ДатаОкончания", ДатаНачала, ДатаНачала);
		Интервалы.Добавить(Интервал);
		
	Иначе
		
		//Если интервал дат больше 3 месяцев - разбить на части
		МаксИнтервал = 7862400;
		Начало = ДатаНачала;
		Конец = Начало;
		
		Пока ДатаОкончания > Конец Цикл
			Конец = Начало;
			Конец = ?((Конец+МаксИнтервал < ДатаОкончания), Конец+МаксИнтервал, ДатаОкончания);
			Интервал = Новый Структура("ДатаНачала,ДатаОкончания");
			Интервал.Вставить("ДатаНачала",Начало);
			Интервал.Вставить("ДатаОкончания",Конец);
			Интервалы.Добавить(Интервал);
			Начало = Конец + 86400;
		КонецЦикла;
		
	КонецЕсли;
	
	//Для каждого интервала загрузить котировки
	Для каждого Интервал Из Интервалы Цикл		
		// Сформировать адрес и скачать страницу с данными
		ПараметрЗапроса = "www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?downloadOper=&" 
		+"group1=second" 
		+"&periodStartDays="  	+	Формат(День(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartMonths=" 	+ 	Формат(Месяц(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
		+"&periodStartYear="	+	Формат(Интервал.ДатаНачала,"ДФ=yyyy")
		+"&periodEndDays=" 		+	Формат(День(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndMonths=" 	+ 	Формат(Месяц(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
		+"&periodEndYear=" 		+ 	Формат(Интервал.ДатаОкончания,"ДФ=yyyy")
		+"&valutes="			+	?(Валюта="руб.","RUB", Валюта)	
		+"&search=true&showChart=false&showChartButton=false";		
		РезультатЗапроса = БНБ_ПолучитьСтраницуHTML(ПараметрЗапроса);
		
		Если РезультатЗапроса.Статус Тогда
			ЧтениеHTML = Новый ЧтениеHTML;
			ЧтениеHTML.УстановитьСтроку(РезультатЗапроса.Результат);
			ПостроительДОМ = Новый ПостроительDOM;
			ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
			ЭлементыСекции = ДокументDOM.ПолучитьЭлементыПоИмени("tbody");	
			
			Если ЭлементыСекции.Количество() > 0 Тогда	
				Для каждого СтрокаТаблицы Из ЭлементыСекции[0].ДочерниеУзлы Цикл					
					СтрокаСДатой = СтрокаТаблицы.ДочерниеУзлы[0].ТекстовоеСодержимое; 
					Котировка = Новый Структура("Дата, Валюта, Курс, Кратность");
					Котировка.Вставить("Дата", Дата(Прав(СтрокаСДатой, 4), Сред(СтрокаСДатой, 4, 2), Сред(СтрокаСДатой, 1, 2)) );
					Котировка.Вставить("Валюта", Валюта);
					Котировка.Вставить("Курс", СтрокаТаблицы.ДочерниеУзлы[4].ТекстовоеСодержимое);
					Котировка.Вставить("Кратность", СтрокаТаблицы.ДочерниеУзлы[2].ТекстовоеСодержимое);					
					Котировки.Добавить(Котировка);	
				КонецЦикла; 
			Иначе
				Описание = "Не найдено данных по адресу " + ПараметрЗапроса ;
				Возврат Новый Структура("Статус,Описание,Результат", Ложь, Описание, Неопределено);
			КонецЕсли;
			
		Иначе		
			// При получении страницы возникла ошибка
			Описание = "Ошибка получения страницы (" + ПараметрЗапроса + "): " + РезультатЗапроса.Описание;
			Возврат Новый Структура("Статус,Описание,Результат", Ложь, Описание, Неопределено);
		КонецЕсли;	
	КонецЦикла;
	
	Если Котировки.Количество() = 0 Тогда	
		Описание = НСтр("ru = 'Курсы валюты %1 (%2) не загружены.
		|Нет сведений о курсе за указанный период.'");
	Иначе
		Описание = НСтр("ru = 'Загружено " + Котировки.Количество() + " курсов для валюты %1 (%2).'");
	КонецЕсли;
	
	Описание = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Описание, Валюта.Наименование, Валюта.Код); 
	Возврат Новый Структура("Статус,Описание,Результат", Истина, Описание, Котировки);
КонецФункции

//Записывает котировки в реестр сведений КурсыВалют
// Параметр МассивКурсов состоит из строк с структурами "Дата, Валюта, Курс, Кратность"
// 
&НаСервере
Процедура БНБ_ВыполнитьЗаписьКурсовВРеестр(МассивКурсов) Экспорт
	
	// Обработать каждую запись из полученных данных
	Для каждого Запись Из МассивКурсов Цикл
		
		//Получть записи регистра на указанную валюту и дату
		НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
		ТекВалюта = Справочники.Валюты.НайтиПоНаименованию(Запись.Валюта);
		ТекДата = Запись.Дата;
		НаборЗаписей.Отбор.Валюта.Установить(ТекВалюта);
		НаборЗаписей.Отбор.Период.Установить(НачалоДня(ТекДата));
		НаборЗаписей.Прочитать();
		
		//Если в регистре нет записей, добавить новую, если есть - перезаписать новыми данными
		Если НаборЗаписей.Количество() = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Валюта   = ТекВалюта;
			НоваяЗапись.Период = ТекДата;
			НоваяЗапись.Курс = Запись.Курс;
			НоваяЗапись.Кратность = Запись.Кратность;
		Иначе
			НоваяЗапись = НаборЗаписей[0];
		КонецЕсли;
		
		// Закончить операцию добавления/обновления записси в регистре
		НоваяЗапись.Курс = Запись.Курс;
		НаборЗаписей.Записать();	
	КонецЦикла;
	
КонецПроцедуры

// Проверяет, актуальны ли курсы валют для валют, котируемых к леву
// Возвращает значение Истина или Ложь
//
//&НаСервере
//Функция БНБ_КурсыАктуальны() Экспорт
//	ТекстЗапроса =
//	"ВЫБРАТЬ
//	|	Валюты.Ссылка КАК Ссылка
//	|ПОМЕСТИТЬ втВалюты
//	|ИЗ
//	|	Справочник.Валюты КАК Валюты
//	|ГДЕ
//	|	Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА
//	|	И Валюты.ПометкаУдаления = ЛОЖЬ
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ ПЕРВЫЕ 1
//	|	1 КАК Поле1
//	|ИЗ
//	|	втВалюты КАК Валюты
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
//	|		ПО Валюты.Ссылка = КурсыВалют.Валюта
//	|			И (КурсыВалют.Период = &ТекущаяДата)
//	|ГДЕ
//	|	КурсыВалют.Валюта ЕСТЬ NULL ";
//	
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДатаСеанса()));
//	Запрос.Текст = ТекстЗапроса;
//	
//	Возврат Запрос.Выполнить().Пустой();
//КонецФункции



#КонецОбласти


#Область Задания

// Выполняет обновление курсов
//
//
//&НаСервере
//Функция БНБ_ОбновитьКурсыВалют(Валюта = Неопределено) Экспорт
//КонецФункции


// Эта процедура вызывается регламентным заданием "Загрузка курсов валют"
//&Перед("ЗагрузитьАктуальныйКурс")
//Процедура БНБ_ЗагрузитьАктуальныйКурс(ПараметрыЗагрузки = Неопределено, АдресРезультата = Неопределено) Экспорт
//	// Получить автоматически обновляемые валюты
//	АвтоматическиОбновляемыеВалюты = БНБ_АвтоматическиОбновляемыеВалюты();
//	Для каждого Валюта Из АвтоматическиОбновляемыеВалюты Цикл
//		// Получить дату последнего имеющегося курса
//	
//		// Получить и записать курсы

//	КонецЦикла;
//			
//КонецПроцедуры

//&Перед("ОбновитьКурсВалюты")
//Процедура БНБ_ОбновитьКурсВалюты(Параметры, АдресРезультата)
//	// Вставить содержимое метода.
//КонецПроцедуры

#КонецОбласти


#Область Устаревшие  

//// Обновляет отсутствующие котировки для валют, которые отмечены как ЗагружатьАвтоматически
////  
//// Возвращаемое значение: структура "СтатусОперации,Результат"
////   Результат - Краткое текстовое описание результата выполнения операции 
////   СтатусОперации - булевый результат выполнения
//&НаСервере
//Функция АктуализироватьКурсыВалют()
//	
//	Результат = Новый Структура("СтатусОперации","Результат");
//	КурсыВалют = Новый Массив();
//	СтатусОперации = Истина;
//	// Получить список автоматически обновляемых валют
//	Запрос = Новый Запрос;
//	ТекстЗапроса =
//	"ВЫБРАТЬ
//	|	Валюты.Ссылка КАК Ссылка
//	|ИЗ
//	|	Справочник.Валюты КАК Валюты
//	|ГДЕ
//	|	НЕ Валюты.ПометкаУдаления
//	|	И Валюты.БНБ_КотироватьКБолгарскомуЛеву = ИСТИНА
//	|	И Валюты.БНБ_ЗагружатьАвтоматически = ИСТИНА";	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	СписокВалют = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");	
//	
//	Для Каждого Валюта из СписокВалют Цикл
//		// Получить посл.
//		Запрос = Новый Запрос;
//		ТекстЗапроса = 
//		"ВЫБРАТЬ
//		|	КурсыВалютСрезПоследних.Период КАК Период
//		|ИЗ
//		|	РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалютСрезПоследних,
//		|	РегистрСведений.КурсыВалют КАК КурсыВалют,
//		|	Справочник.Валюты КАК Валюты
//		|ГДЕ
//		|	Валюты.Ссылка = &Валюта";                                                     
//		ДатаПоследнегоКурса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Период");						
//		Если ТекущаяДатаСеанса() > ДатаПоследнегоКурса Тогда
//			АктуальныеКурсы = БНБ_ПолучитьКурсВалюты(Валюта, ДатаПоследнегоКурса, ТекущаяДатаСеанса());
//		Иначе
//			СтатусОперации = Ложь;
//			Продолжить;
//		КонецЕсли;   
//	КонецЦикла;
//	
//	РезультатОперации = АктуальныеКурсы.Результат.Количество();
//	Если РезультатОперации > 0 Тогда
//		// Записать данные в РеестрСведений
//		
//		
//		
//		
//		// Окончить и сформировать статус выполнения
//		Результат.Вставить("СтатусОперации", Истина);
//		Результат.Вставить("Результат", "Обработано " + РезультатОперации + " записей.");
//	Иначе
//		Результат.Вставить("СтатусОперации", Ложь);
//		Результат.Вставить("Результат", "Записей не найдено.");
//	КонецЕсли;
//	
//	Возврат Результат;
//КонецФункции







// <Описание функции>
//
// Параметры:
//   КурсыВалют - массив 	- структуры("Дата, Валюта, Курс, Кратность")
//
// Возвращаемое значение:
//   Результат 	- структура	- "Статус,Результат,Описание";
//
//Функция БНБ_СохранитьКурсыВалют(КурсыВалют) Экспорт

//	
//	Возврат Истина;
//КонецФункции // БНБ_СохранитьКурсыВалют()

//&НаСервере
//Возвращает структуру "СтатусОперации,Результат" где
// СтатусОперации - булевый результат выполнения
// Результат - массив с курсами валют из элементов Структура("Дата, Валюта, Курс, Кратность");			
//
//Функция БНБ_СкачатьКурсыВалюты(Валюта, ДатаНачала, ДатаОкончания) Экспорт
//	Результат = Новый Структура("Статус,Результат,Описание"); 
//	
//	// Создать хранилище для результатов
//	
//	КурсыВалют = Новый Массив();
//	
//	//Получить массив из интервалов
//	Интервалы = Новый Массив();
//	Если ДатаНачала = ДатаОкончания Тогда
//		
//		Интервал = Новый Структура("ДатаНачала, ДатаОкончания");
//		Интервал.Вставить("ДатаНачала",ДатаНачала);
//		Интервал.Вставить("ДатаОкончания",ДатаНачала);
//		Интервалы.Добавить(Интервал);
//		
//	Иначе
//		
//		//Если интервал дат больше 3 месяцев - разбить на части
//		МаксИнтервал = 7862400;
//		Начало = ДатаНачала;
//		Конец = Начало;
//		
//		Пока ДатаОкончания > Конец Цикл
//			Конец = Начало;
//			Конец = ?((Конец+МаксИнтервал < ДатаОкончания), Конец+МаксИнтервал, ДатаОкончания);
//			Интервал = Новый Структура("ДатаНачала,ДатаОкончания");
//			Интервал.Вставить("ДатаНачала",Начало);
//			Интервал.Вставить("ДатаОкончания",Конец);
//			Интервалы.Добавить(Интервал);
//			Начало = Конец + 86400;
//		КонецЦикла;
//		
//	КонецЕсли;
//	
//	//Теперь для каждого интервала загрузить котировки
//	Для каждого Интервал Из Интервалы Цикл	
//		// Сформировать адрес
//		ПараметрЗапроса = "www.bnb.bg/Statistics/StExternalSector/StExchangeRates/StERForeignCurrencies/index.htm?downloadOper=&" 
//		+"group1=second" 
//		+"&periodStartDays="  	+	Формат(День(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
//		+"&periodStartMonths=" 	+ 	Формат(Месяц(Интервал.ДатаНачала),"ЧЦ=2; ЧВН=")
//		+"&periodStartYear="	+	Формат(Интервал.ДатаНачала,"ДФ=yyyy")
//		+"&periodEndDays=" 		+	Формат(День(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
//		+"&periodEndMonths=" 	+ 	Формат(Месяц(Интервал.ДатаОкончания),"ЧЦ=2; ЧВН=")
//		+"&periodEndYear=" 		+ 	Формат(Интервал.ДатаОкончания,"ДФ=yyyy")
//		+"&valutes="			+	?(Валюта="руб.","RUB", Валюта)	
//		+"&search=true&showChart=false&showChartButton=false";
//		
//		//Получить страницу
//		Ответ = БНБ_ПолучитьСтраницуHTML(ПараметрЗапроса);
//		
//		Если Ответ.СтатусОперации Тогда
//			ЧтениеHTML = Новый ЧтениеHTML;
//			ЧтениеHTML.УстановитьСтроку(Ответ.Результат);
//			ПостроительДОМ = Новый ПостроительDOM;
//			ДокументDOM= ПостроительДОМ.Прочитать(ЧтениеHTML);
//			ЭлементыСекции = ДокументDOM.ПолучитьЭлементыПоИмени("tbody");	
//			
//			//Если ответ не пустой
//			Если ЭлементыСекции.Количество() > 0 Тогда	
//				// Массив ЭлементыСекции должен содержать единственную запись
//				// Разобрать тело таблицы на строки
//				Для каждого СтрокаТаблицы Из ЭлементыСекции[0].ДочерниеУзлы Цикл
//					//Сформировать структуру для ответа 
//					Котировка = Новый Структура("Дата, Валюта, Курс, Кратность");
//					//Для каждой строки заполнить структуру Котировка
//					СтрокаСДатой = СтрокаТаблицы.ДочерниеУзлы[0].ТекстовоеСодержимое;
//					
//					Котировка.Вставить("Дата", Дата(Прав(СтрокаСДатой, 4), Сред(СтрокаСДатой, 4, 2), Сред(СтрокаСДатой, 1, 2)) );
//					Котировка.Вставить("Валюта", Валюта);
//					Котировка.Вставить("Курс", СтрокаТаблицы.ДочерниеУзлы[4].ТекстовоеСодержимое);
//					Котировка.Вставить("Кратность", СтрокаТаблицы.ДочерниеУзлы[2].ТекстовоеСодержимое);
//					
//					// Поместить результат в хранилище для результатов
//					КурсыВалют.Добавить(Котировка);
//					
//				КонецЦикла;
//				Результат.Вставить("Результат", КурсыВалют);
//				Результат.Вставить("Описание", "Выполнено");
//				Результат.Вставить("Статус", Истина);
//			Иначе
//				Результат.Вставить("Статус", Ложь);
//			КонецЕсли;
//			
//		КонецЕсли;
//		
//		// Обработать следующий интервал	
//	КонецЦикла;	
//	
//	Возврат Результат;
//	
//	
//КонецФункции
//// Функция - БНБ курс валюты на дату
////
//// Параметры:
////  Валюта		 ссылка 	- 
////  ДатаКурса	 интервал	- 
//// 
//// Возвращаемое значение:
////   			массив		- 
////
//Функция БНБ_КурсВалютыНаДату(ЗНАЧ Валюта, ДатаКурса)
//	Результат = БНБ_ПолучитьКурсВалюты(Валюта, ДатаКурса, ДатаКурса);
//	Возврат Результат[0].Результат;
//КонецФункции	
#КонецОбласти
